{"version":3,"sources":["components/Counter/Counter.js","App.js","index.js"],"names":["Counter","param","state","count","type","onClick","addOne","add100","increase","App","setState","prev","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAyCeA,G,MAtCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACd,oCACE,qCAEGA,EAAMC,MAAMC,OAEf,4BACEC,KAAK,SACLC,QAASJ,EAAMK,QAFjB,UAMA,4BACEF,KAAK,SACLC,QAASJ,EAAMM,QAFjB,UAMA,4BACEH,KAAK,SACLC,QAASJ,EAAMO,UAFjB,eCiBWC,E,4MAjCbP,MAAQ,CACNC,MAAO,G,EAGTG,OAAS,WACP,EAAKI,UAAS,SAAAC,GAAI,MAAK,CACrBR,MAAOQ,EAAKR,MAAQ,O,EAIxBI,OAAS,WACP,EAAKG,UAAS,SAAAC,GAAI,MAAK,CACrBR,MAAOQ,EAAKR,MAAQ,S,EAIxBK,SAAW,WACT,EAAKE,UAAS,SAACC,GACTA,EAAKR,MAAQ,IAAM,GACrB,EAAKI,SAGP,EAAKD,a,4CAIT,WACE,OACE,kBAAC,EAAD,CAASL,MAAOW,W,GA7BJC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d78dd63d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ param }) => (\n  <>\n    <h1>\n      Count:\n      {param.state.count}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={param.addOne}\n    >\n      addOne\n    </button>\n    <button\n      type=\"button\"\n      onClick={param.add100}\n    >\n      add100\n    </button>\n    <button\n      type=\"button\"\n      onClick={param.increase}\n    >\n      increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  param: PropTypes.shape({\n    state: PropTypes.shape({\n      count: PropTypes.number.isRequired,\n    }).isRequired,\n    addOne: PropTypes.func.isRequired,\n    add100: PropTypes.func.isRequired,\n    increase: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Counter;\n","import React from 'react';\nimport './App.scss';\nimport Counter from './components/Counter/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(prev => ({\n      count: prev.count + 1,\n    }));\n  }\n\n  add100 = () => {\n    this.setState(prev => ({\n      count: prev.count + 100,\n    }));\n  }\n\n  increase = () => {\n    this.setState((prev) => {\n      if (prev.count % 5 === 0) {\n        this.add100();\n      }\n\n      this.addOne();\n    });\n  }\n\n  render() {\n    return (\n      <Counter param={this} />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}